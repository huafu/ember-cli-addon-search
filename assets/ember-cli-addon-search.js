eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"ember-cli-addon-search/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"ember-cli-addon-search/config/environment\",\"ember-cli-addon-search/ga\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=ember-cli-addon-search/app.js");

;eval("define(\"ember-cli-addon-search/ga\", \n  [],\n  function() {\n    \"use strict\";\n    /* jshint ignore:start */\n    (function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\n    (i[r].q=i[r].q||[]).push(arguments);},i[r].l=1*new Date(),a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0],a.async=1,a.src=g,m.parentNode.insertBefore(a,m);\n    })(window,document,\'script\',\'//www.google-analytics.com/analytics.js\',\'ga\');\n\n    window.ga(\'create\', \'UA-25728534-11\', \'auto\');\n    window.ga(\'send\', \'pageview\');\n    /* jshint ignore:end */\n  });//# sourceURL=ember-cli-addon-search/ga.js");

;eval("define(\"ember-cli-addon-search/components/sort-order-arrow\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      tagName: \'span\',\n      subject: null,\n      name: null,\n\n      isSorted: function () {\n        return (this.get(\'subject.sortProperties\') || []).indexOf(this.get(\'name\')) >= 0;\n      }.property(\'subject.sortProperties.@each\').readOnly(),\n\n      isAscending: Ember.computed.oneWay(\'subject.sortAscending\')\n    });\n  });//# sourceURL=ember-cli-addon-search/components/sort-order-arrow.js");

;eval("define(\"ember-cli-addon-search/controllers/packages/list\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var DEFAULT_SORT = \'-modified\';\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n      queryParams: {\n        query:     {as: \'q\', replace: true},\n        qpSort:    \'s\',\n        qpReverse: \'r\'\n      },\n\n      sortProperties: [DEFAULT_SORT],\n      sortAscending:  true,\n\n      // used to show the user if a filtering is scheduled or not\n      isFiltering:    false,\n\n      // used by query parameters and the match method in the item controllers\n      query:          \'\',\n\n      // beautify or parse the sort QP\n      qpSort:         function (key, value) {\n        if (arguments.length > 1) {\n          this.set(\'sortProperties\', [\'-\' + value]);\n        }\n        return (this.get(\'sortProperties.firstObject\') || DEFAULT_SORT).substr(1);\n      }.property(\'sortProperties.firstObject\'),\n\n      // beatify or parse the sort order QP\n      qpReverse:      function (key, value) {\n        if (arguments.length > 1) {\n          this.set(\'sortAscending\', !value);\n        }\n        return this.get(\'sortAscending\') ? \'\' : \'1\';\n      }.property(\'sortAscending\'),\n\n      // used by the input box\n      searchInput:    function (key, value) {\n        if (arguments.length > 1) {\n          this.set(\'isFiltering\', true);\n          Ember.run.debounce(this, \'updateQuery\', value, 100);\n        }\n        else {\n          value = this.get(\'query\');\n        }\n        return value;\n      }.property(\'query\'),\n\n      // filter content\n      model:          function () {\n        var query = (this.get(\'query\') || \'\').trim().toLowerCase();\n        return (this.get(\'sourceContent\') || []).filter(function (item) {\n          return !query ||\n            item.get(\'-name\').indexOf(query) >= 0 ||\n            item.get(\'-owner\').indexOf(query) >= 0 ||\n            item.get(\'-description\').indexOf(query) >= 0;\n        });\n      }.property(\n        // we don\'t need to listen for @each since our content will never change or be totally updated\n        \'sourceContent\', \'query\'\n      ).readOnly(),\n\n      // in a function so that we can debounce it => the filtering and refreshing of URL isn\'t done on\n      // each char\n      updateQuery:    function (value) {\n        this.set(\'query\', value || \'\');\n        this.set(\'isFiltering\', false);\n      },\n\n      // our filtered content\n      sourceContent:  null,\n\n      // whether we have some items matching the filters or not\n      hasMatch:       Ember.computed.bool(\'length\'),\n\n      actions: {\n        // used in the table headers to sort\n        toggleSort: function (name) {\n          name = \'-\' + name;\n          if (this.get(\'sortProperties.firstObject\') === name) {\n            this.toggleProperty(\'sortAscending\');\n          }\n          else {\n            this.setProperties({\n              sortProperties: [name],\n              sortAscending:  true\n            });\n          }\n        }\n      }\n    });\n  });//# sourceURL=ember-cli-addon-search/controllers/packages/list.js");

;eval("define(\"ember-cli-addon-search/helpers/digit-grouping\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    function digitGrouping(value) {\n      value = parseFloat(value);\n      return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \',\');\n    }\n\n    __exports__.digitGrouping = digitGrouping;\n\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(digitGrouping);\n  });//# sourceURL=ember-cli-addon-search/helpers/digit-grouping.js");

;eval("define(\"ember-cli-addon-search/initializers/ember-img-cache\", \n  [\"ember\",\"ember-img-cache/helpers/img\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var img = __dependency2__.img;\n\n    Ember.Handlebars.registerBoundHelper(\'img\', img);\n\n    __exports__[\"default\"] = {\n      name:       \'ember-img-cache\',\n      initialize: Ember.K\n    };\n  });//# sourceURL=ember-cli-addon-search/initializers/ember-img-cache.js");

;eval("define(\"ember-cli-addon-search/initializers/ember-moment\", \n  [\"ember-moment/helpers/moment\",\"ember-moment/helpers/ago\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var moment = __dependency1__.moment;\n    var ago = __dependency2__.ago;\n    var Ember = __dependency3__[\"default\"];\n\n    var initialize = function(/* container, app */) {\n      Ember.Handlebars.helper(\'moment\', moment);\n      Ember.Handlebars.helper(\'ago\', ago);\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'ember-moment\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=ember-cli-addon-search/initializers/ember-moment.js");

;eval("define(\"ember-cli-addon-search/initializers/export-application-global\", \n  [\"ember\",\"ember-cli-addon-search/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=ember-cli-addon-search/initializers/export-application-global.js");

;eval("define(\"ember-cli-addon-search/initializers/store\", \n  [\"ember-cli-addon-search/models/package\",\"ember-cli-addon-search/models/npm-user\",\"ember-cli-addon-search/models/github-user\",\"ember-cli-addon-search/models/github-repo\",\"ember-cli-addon-search/store\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __exports__) {\n    \"use strict\";\n    var Package = __dependency1__[\"default\"];\n    var NpmUser = __dependency2__[\"default\"];\n    var GithubUser = __dependency3__[\"default\"];\n    var GithubRepo = __dependency4__[\"default\"];\n    var Store = __dependency5__[\"default\"];\n\n    var initialize = function (container, application) {\n      container.register(\'store:main\', Store, { singleton: true });\n      container.register(\'model:package\', Package, { singleton: false });\n      container.register(\'model:npm-user\', NpmUser, { singleton: false });\n      container.register(\'model:github-user\', GithubUser, { singleton: false });\n      container.register(\'model:github-repo\', GithubRepo, { singleton: false });\n\n      application.inject(\'route\', \'store\', \'store:main\');\n      application.inject(\'controller\', \'store\', \'store:main\');\n      application.inject(\'model\', \'store\', \'store:main\');\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'store\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=ember-cli-addon-search/initializers/store.js");

;eval("define(\"ember-cli-addon-search/models/package\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    // one week\n    var NEW_DIFF = 7 * 24 * 60 * 60 * 1000;\n\n    __exports__[\"default\"] = Ember.Object.extend({\n      // ======= helpers for sorting and searching =====\n\n      \'-modified\': function () {\n        // by default we want it to be sorted in reverse\n        return -this.get(\'modifiedAt\');\n      }.property(\'modifiedAt\').readOnly(),\n\n      \'-created\': function () {\n        // by default we want it to be sorted in reverse\n        return -this.get(\'createdAt\');\n      }.property(\'createdAt\').readOnly(),\n\n      \'-name\': function () {\n        return this.get(\'name\').trim().toLowerCase();\n      }.property(\'name\').readOnly(),\n\n      \'-owner\': function () {\n        return (this.get(\'owner.name\') || \'\').trim().toLowerCase();\n      }.property(\'owner.name\').readOnly(),\n\n      \'-description\': function () {\n        return (this.get(\'description\') || \'\').trim().toLowerCase();\n      }.property(\'description\').readOnly(),\n\n      \'-downloads\': function () {\n        return this.get(\'downloadedCount\') || 0;\n      }.property(\'downloadedCount\').readOnly(),\n\n      isNew: function () {\n        return Date.now() - this.get(\'createdAt\') < NEW_DIFF;\n      }.property(\'createdAt\').readOnly()\n    });\n  });//# sourceURL=ember-cli-addon-search/models/package.js");

;eval("define(\"ember-cli-addon-search/models/npm-user\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n\n    __exports__[\"default\"] = Ember.Object.extend({});\n  });//# sourceURL=ember-cli-addon-search/models/npm-user.js");

;eval("define(\"ember-cli-addon-search/models/github-user\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n\n    __exports__[\"default\"] = Ember.Object.extend({});\n  });//# sourceURL=ember-cli-addon-search/models/github-user.js");

;eval("define(\"ember-cli-addon-search/models/github-repo\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n\n    __exports__[\"default\"] = Ember.Object.extend({});\n  });//# sourceURL=ember-cli-addon-search/models/github-repo.js");

;eval("define(\"ember-cli-addon-search/store\", \n  [\"ember\",\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n\n    function coerceId(id) {\n      if (id) {\n        return \'\' + id;\n      }\n      return null;\n    }\n\n    function date(dt) {\n      if (!dt) {\n        return null;\n      }\n      return new Date(dt);\n    }\n\n    __exports__[\"default\"] = Ember.Object.extend({\n      /**\n       * Source URL where to get the package list from\n       * @property sourceUrl\n       * @type String\n       */\n      sourceUrl: \'https://io-builtwithember-addons-data.s3.amazonaws.com/addons.json\',\n      /**\n       * Cache max age in milliseconds\n       * @property maxAge\n       * @type Number\n       */\n      maxAge:    1000 * 60 * 30,\n\n      _since:        null,\n      _ajaxPromise:  null,\n      _recordsCache: null,\n\n      /**\n       * Get a model class for its name\n       *\n       * @method modelFor\n       * @param {String} model\n       * @returns {subclass of Ember.Object}\n       */\n      modelFor: function (model) {\n        return this.container.lookupFactory(\'model:\' + model);\n      },\n\n      /**\n       * Returns the primary key of the model\n       *\n       * @method primaryKeyFor\n       * @param {String} model\n       * @returns {String}\n       */\n      primaryKeyFor: function (model) {\n        return this.modelFor(model).primaryKey || \'name\';\n      },\n\n\n      /**\n       * Get or create a record for a given ID\n       *\n       * @method recordForId\n       * @param {String} model\n       * @param {String} id\n       * @returns {Ember.Object}\n       */\n      recordForId: function (model, id) {\n        var cache = this.get(\'_recordsCache\');\n        var cleanId = coerceId(id);\n        var record, pk;\n        if (!cache[model]) {\n          cache[model] = Object.create(null);\n        }\n        if (!cache[model][cleanId]) {\n          record = {};\n          pk = this.primaryKeyFor(model);\n          record[pk] = id;\n          cache[model][cleanId] = this.modelFor(model).create(record);\n        }\n        return cache[model][cleanId];\n      },\n\n      /**\n       * Finds whether a record exists for the given model and ID\n       *\n       * @method hasRecordForId\n       * @param {String} model\n       * @param {String} id\n       * @returns {Boolean}\n       */\n      hasRecordForId: function (model, id) {\n        var cache = this.get(\'_recordsCache\');\n        var cleanId = coerceId(id);\n        return !!(cache[model] && cache[model][cleanId]);\n      },\n\n      /**\n       * Create or update a records given the model name and properties\n       *\n       * @method createOrUpdateRecord\n       * @param {String} model\n       * @param {Object} data\n       * @returns {Ember.Object}\n       */\n      createOrUpdateRecord: function (model, data) {\n        var record;\n        var pk = this.primaryKeyFor(model);\n        var cleanId = coerceId(data[pk]);\n        var cache = this._modelRecordsCache(model);\n        if ((record = cache[cleanId])) {\n          record.setProperties(data);\n        }\n        else {\n          cache[cleanId] = record = this.modelFor(model).create(data);\n        }\n        return record;\n      },\n\n      /**\n       * Creates a new record\n       *\n       * @method createRecord\n       * @param {String} model\n       * @param {Object} data\n       * @returns {Ember.Object}\n       */\n      createRecord: function (model, data) {\n        var record, pk = this.primaryKeyFor(model);\n        if (this.hasRecordForId(model, data[pk])) {\n          throw new Error(\'record of model %@ with id %@ already exists\'.fmt(model, data[pk]));\n        }\n        record = this.modelFor(model).create(data);\n        this._modelRecordsCache(model)[coerceId(data[pk])] = record;\n        return record;\n      },\n\n      /**\n       * Finds one Package record if there is one with the given name, or all package records if no name given\n       *\n       * @method find\n       * @param {String} model\n       * @param {String} [id]\n       * @returns {Ember.RSVP.Promise}\n       */\n      find: function (model, id) {\n        var pk = this.primaryKeyFor(model);\n        return this._all(model)\n          .then(function (content) {\n            if (id) {\n              return content.findBy(pk, id);\n            }\n            else {\n              return content;\n            }\n          });\n      },\n\n      /**\n       * Finds records base on a search query\n       *\n       * @method findQuery\n       * @param {String} model\n       * @param {Object} where\n       * @returns {Ember.RSVP.Promise}\n       */\n      findQuery: function (model, where) {\n        var filterFunc = function (item) {\n          var val;\n          for (var k in where) {\n            val = where[k];\n            if (item.get(k) !== val) {\n              return false;\n            }\n          }\n          return true;\n        };\n        return this._all(model)\n          .then(function (content) {\n            return content.filter(filterFunc);\n          });\n      },\n\n      /**\n       * Finds all records\n       *\n       * @method findALl\n       * @param {String} model\n       * @returns {Ember.RSVP.Promise}\n       */\n      findAll: function (model) {\n        return this.find(model);\n      },\n\n      /**\n       * Returns a promise resolving to an array of all packages as records\n       * @method _all\n       * @param {String} model\n       * @returns {Ember.RSVP.Promise}\n       * @private\n       */\n      _all: function (model) {\n        var self = this, records, cache;\n        if (this._ajaxPromise) {\n          return this._ajaxPromise;\n        }\n        else if (!this._since || Date.now() - this._since > this.get(\'maxAge\')) {\n          return this._ajaxPromise = ajax(this.get(\'sourceUrl\'))\n            .then(function (results) {\n              self._parse(results);\n              self._since = Date.now();\n              self._ajaxPromise = null;\n              records = [];\n              cache = self._recordsCache[model];\n              for (var k in cache) {\n                records.push(cache[k]);\n              }\n              return records;\n            })[\"catch\"](function (error) {\n              self._ajaxPromise = null;\n              return error;\n            });\n        }\n        return Ember.RSVP.resolve(this._data.content);\n      },\n\n\n      /**\n       * Parse the JSON from the source URL\n       *\n       * @method _parse\n       * @param {Array} content\n       * @private\n       */\n      _parse: function (content) {\n        var self = this, pkgRecord, repoRecord, userRecord;\n\n        function parseNpmUser(user) {\n          if (!user) {\n            return null;\n          }\n          userRecord = {};\n          userRecord.name = user.name;\n          userRecord.email = user.email;\n          userRecord.gravatarUrl = user.gravatar + \'?s=30&d=retro\';\n          userRecord.profileUrl = \'https://npmjs.org/~\' + user.name;\n          return self.createOrUpdateRecord(\'npm-user\', userRecord);\n        }\n\n        function parseGithubUser(user) {\n          if (!user) {\n            return null;\n          }\n          userRecord = {};\n          userRecord.name = user.user;\n          userRecord.profileUrl = \'https://github.com/\' + user.user;\n          return self.createOrUpdateRecord(\'github-user\', userRecord);\n        }\n\n        function parseGithubRepo(repo) {\n          if (!repo) {\n            return null;\n          }\n          repoRecord = {};\n          repoRecord.user = self.recordForId(\'github-user\', repo.user);\n          repoRecord.name = repo.user + \'/\' + repo.repo;\n          repoRecord.url = \'https://github.com/\' + repoRecord.name;\n          repoRecord.travisBadgeUrl = \'https://travis-ci.org/\' + repo.user + \'/\' + repo.repo + \'.svg?branch=master\';\n          return self.createOrUpdateRecord(\'github-repo\', repoRecord);\n        }\n\n        content.forEach(function (pkg) {\n          pkgRecord = {};\n          pkgRecord.name = pkg.name;\n          pkgRecord.description = (pkg.description || \'\').trim();\n          pkgRecord.createdAt = date(pkg.time.created);\n          pkgRecord.modifiedAt = date(pkg.time.created);\n          pkgRecord.homePageUrl = pkg.homepage.url;\n          pkgRecord.keywords = pkg.keywords.without(\'ember-data\');\n          pkgRecord.repositoryUrl = pkg.repository.url;\n          pkgRecord.authorName = pkg.author ? pkg.author.name : pkg._npmUser.name;\n          pkgRecord.owner = parseNpmUser(pkg._npmUser);\n          pkgRecord.githubUser = parseGithubUser(pkg.github);\n          pkgRecord.githubRepo = parseGithubRepo(pkg.github);\n          pkgRecord.license = pkg.license;\n          pkgRecord.bugUrl = pkg.bugs.url;\n          pkgRecord.starredCount = pkg.starred.length;\n          pkgRecord.downloadedCount = pkg.downloads.downloads;\n          pkgRecord.firstDownloadedAt = date(pkg.downloads.start);\n          pkgRecord.lastDownloadedAt = date(pkg.downloads.end);\n          pkgRecord.npmUrl = \'https://www.npmjs.org/package/\' + pkg.name;\n\n          self.createOrUpdateRecord(\'package\', pkgRecord);\n        });\n      },\n\n      /**\n       * Get the records cache dict for a model\n       *\n       * @method _modelRecordsCache\n       * @param {String} model\n       * @returns {Object}\n       * @private\n       */\n      _modelRecordsCache: function (model) {\n        if (!this._recordsCache) {\n          this._recordsCache = Object.create(null);\n        }\n        if (!this._recordsCache[model]) {\n          this._recordsCache[model] = Object.create(null);\n        }\n        return this._recordsCache[model];\n      }\n\n    });\n  });//# sourceURL=ember-cli-addon-search/store.js");

;eval("define(\"ember-cli-addon-search/router\", \n  [\"ember\",\"ember-cli-addon-search/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function () {\n      this.resource(\'packages\', { path: \'/\' }, function () {\n        this.route(\'list\', { path: \'/\' });\n      });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=ember-cli-addon-search/router.js");

;eval("define(\"ember-cli-addon-search/routes/packages/list\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      model: function () {\n        return this.store.findAll(\'package\');\n      },\n\n      setupController: function (controller, model) {\n        controller.set(\'sourceContent\', model);\n        this.controllerFor(\'application\').set(\'packageCount\', model.get(\'length\'));\n      }\n    });\n  });//# sourceURL=ember-cli-addon-search/routes/packages/list.js");

;eval("define(\"ember-cli-addon-search/templates/-footer\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12 container-footer\\\">\\n      Made by\\n      <a href=\\\"http://twitter.com/gcollazo\\\">@gcollazo</a>\\n      from\\n      <a href=\\\"http://blimp.io\\\">Blimp</a>.\\n    </div>\\n  </div>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=ember-cli-addon-search/templates/-footer.js");

;eval("define(\"ember-cli-addon-search/templates/-header\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this;\n\n    function program1(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"packageCount\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"hundreds of\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12\\\">\\n            <div class=\\\"search-wrapper\\\">\\n              <input type=\\\"text\\\" placeholder=\\\"Filter addons\\\" class=\\\"form-control search-field\\\" disabled=\\\"disabled\\\">\\n            </div>\\n          </div>\\n        </div>\\n      \");\n      }\n\n      data.buffer.push(\"<header>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\n        <h1 class=\\\"branding\\\">Ember Addons</h1>\\n        <div class=\\\"header-subtitle\\\">Listing \");\n      stack1 = helpers[\'if\'].call(depth0, \"packageCount\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" modules that extend ember-cli.</div>\\n      </div>\\n      <div class=\\\"col-sm-6 hidden-xs\\\">\\n        <ul class=\\\"list-inline pull-right\\\">\\n          <li><a href=\\\"https://github.com/gcollazo/ember-cli-addon-search\\\" class=\\\"top-menu-link\\\">Fork us</a></li>\\n          <li><a href=\\\"http://feeds.feedburner.com/EmberAddons\\\" class=\\\"top-menu-link\\\">RSS</a></li>\\n          <li class=\\\"twitter-badge-list-item\\\">\\n            <a href=\\\"https://twitter.com/share\\\" class=\\\"twitter-share-button top-menu-link\\\" data-url=\\\"http://addons.builtwithember.io/\\\" data-text=\\\"ember-cli addon search\\\" data-related=\\\"BuiltWithEmber\\\" data-count=\\\"none\\\" data-hashtags=\\\"emberjs\\\">Tweet</a>\\n            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?\'http\':\'https\';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+\'://platform.twitter.com/widgets.js\';fjs.parentNode.insertBefore(js,fjs);}}(document, \'script\', \'twitter-wjs\');</script>\\n          </li>\\n        </ul>\\n      </div>\\n      </div>\\n      \");\n      stack1 = helpers.unless.call(depth0, \"packageCount\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n</header>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-cli-addon-search/templates/-header.js");

;eval("define(\"ember-cli-addon-search/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"header\", options) : helperMissing.call(depth0, \"partial\", \"header\", options))));\n      data.buffer.push(\"\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"footer\", options) : helperMissing.call(depth0, \"partial\", \"footer\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-cli-addon-search/templates/application.js");

;eval("define(\"ember-cli-addon-search/templates/components/sort-order-arrow\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n  \");\n      stack1 = helpers[\'if\'].call(depth0, \"isAscending\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n    &#x25B2;\\n  \");\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n    &#x25BC;\\n  \");\n      }\n\n      stack1 = helpers[\'if\'].call(depth0, \"isSorted\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-cli-addon-search/templates/components/sort-order-arrow.js");

;eval("define(\"ember-cli-addon-search/templates/packages/item\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n    <div class=\\\"new-package\\\">NEW</div>\\n  \");\n      }\n\n      data.buffer.push(\"<td class=\\\"cell-name\\\">\\n  <a href=\\\"\");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"npmUrl\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\\"\\n     target=\\\"_blank\\\"\\n     class=\\\"package-link\\\">\");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</a>\\n  \");\n      stack1 = (helper = helpers.unboundIf || (depth0 && depth0.unboundIf),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"isNew\", options) : helperMissing.call(depth0, \"unboundIf\", \"isNew\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  <div class=\\\"description\\\">\\n    \");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n  </div>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.img || (depth0 && depth0.img),options={hash:{\n        \'class\': (\"travis-badge\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"githubRepo.travisBadgeUrl\", options) : helperMissing.call(depth0, \"img\", \"githubRepo.travisBadgeUrl\", options))));\n      data.buffer.push(\"\\n  <br class=\\\"visible-xs\\\"><br class=\\\"visible-xs\\\">\\n  <ul class=\\\"list-inline visible-xs list-package-details\\\">\\n    <li>\\n      Owner:\\n      <a target=\\\"_blank\\\" href=\\\"\");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"owner.profileUrl\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\\">\");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"owner.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</a>\\n    </li>\\n    <li>Downloads: \");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"digit-grouping\", \"downloadedCount\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"ID\"],data:data})));\n      data.buffer.push(\"</li>\\n    <li>Updated: \");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"ago\", \"modifiedAt\", \"LLLL\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\"</li>\\n  </ul>\\n</td>\\n<td class=\\\"cell-gravatar hidden-xs\\\">\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.img || (depth0 && depth0.img),options={hash:{\n        \'class\': (\"gravatar\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"owner.gravatarUrl\", options) : helperMissing.call(depth0, \"img\", \"owner.gravatarUrl\", options))));\n      data.buffer.push(\"\\n  <a target=\\\"_blank\\\" href=\\\"\");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"owner.profileUrl\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\\">\");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"owner.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</a>\\n</td>\\n<td class=\\\"cell-downloads hidden-xs\\\">\\n  \");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"digit-grouping\", \"downloadedCount\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"ID\"],data:data})));\n      data.buffer.push(\"\\n</td>\\n<td class=\\\"cell-updated hidden-xs\\\">\\n  \");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"ago\", \"modifiedAt\", \"LLLL\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data})));\n      data.buffer.push(\"\\n</td>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-cli-addon-search/templates/packages/item.js");

;eval("define(\"ember-cli-addon-search/templates/packages/list\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n          \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"table-body\", {hash:{\n        \'content\': (\"model\"),\n        \'sortProperties\': (\"sortProperties\"),\n        \'sortAscending\': (\"sortAscending\")\n      },hashTypes:{\'content\': \"ID\",\'sortProperties\': \"ID\",\'sortAscending\': \"ID\"},hashContexts:{\'content\': depth0,\'sortProperties\': depth0,\'sortAscending\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n          <tbody>\\n          <tr>\\n            <td colspan=\\\"4\\\">\\n              <p class=\\\"not-found\\\">\\n                \");\n      stack1 = helpers[\'if\'].call(depth0, \"isFiltering\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n              </p>\\n            </td>\\n          </tr>\\n          </tbody>\\n        \");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n                  Filtering modules...\\n                \");\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n                  Nothing found for \\\"\");\n      stack1 = helpers._triageMustache.call(depth0, \"searchInput\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\\"\\n                \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"search-wrapper\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"search\"),\n        \'value\': (\"searchInput\"),\n        \'placeholder\': (\"Filter addons\"),\n        \'class\': (\"form-control search-field\"),\n        \'autofocus\': (\"autofocus\")\n      },hashTypes:{\'type\': \"STRING\",\'value\': \"ID\",\'placeholder\': \"STRING\",\'class\': \"STRING\",\'autofocus\': \"STRING\"},hashContexts:{\'type\': depth0,\'value\': depth0,\'placeholder\': depth0,\'class\': depth0,\'autofocus\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <table class=\\\"table table-packages\\\">\\n        <thead>\\n        <tr>\\n          <th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleSort\", \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">\\n            NAME \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-order-arrow\'] || (depth0 && depth0[\'sort-order-arrow\']),options={hash:{\n        \'subject\': (\"\"),\n        \'name\': (\"-name\")\n      },hashTypes:{\'subject\': \"ID\",\'name\': \"STRING\"},hashContexts:{\'subject\': depth0,\'name\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"sort-order-arrow\", options))));\n      data.buffer.push(\"\\n          </th>\\n          <th class=\\\"hidden-xs\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleSort\", \"owner\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">\\n            OWNER \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-order-arrow\'] || (depth0 && depth0[\'sort-order-arrow\']),options={hash:{\n        \'subject\': (\"\"),\n        \'name\': (\"-owner\")\n      },hashTypes:{\'subject\': \"ID\",\'name\': \"STRING\"},hashContexts:{\'subject\': depth0,\'name\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"sort-order-arrow\", options))));\n      data.buffer.push(\"\\n          </th>\\n          <th class=\\\"hidden-xs\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleSort\", \"downloads\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">\\n            DOWNLOADS \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-order-arrow\'] || (depth0 && depth0[\'sort-order-arrow\']),options={hash:{\n        \'subject\': (\"\"),\n        \'name\': (\"-downloads\")\n      },hashTypes:{\'subject\': \"ID\",\'name\': \"STRING\"},hashContexts:{\'subject\': depth0,\'name\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"sort-order-arrow\", options))));\n      data.buffer.push(\"\\n          </th>\\n          <th class=\\\"hidden-xs\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleSort\", \"modified\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">\\n            UPDATED \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-order-arrow\'] || (depth0 && depth0[\'sort-order-arrow\']),options={hash:{\n        \'subject\': (\"\"),\n        \'name\': (\"-modified\")\n      },hashTypes:{\'subject\': \"ID\",\'name\': \"STRING\"},hashContexts:{\'subject\': depth0,\'name\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"sort-order-arrow\", options))));\n      data.buffer.push(\"\\n          </th>\\n        </tr>\\n        </thead>\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"hasMatch\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-cli-addon-search/templates/packages/list.js");

;eval("define(\"ember-cli-addon-search/templates/packages/loading\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"container container-loading\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h3 class=\\\"loading\\\">Loading modules...</h3>\\n    </div>\\n  </div>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=ember-cli-addon-search/templates/packages/loading.js");

;eval("define(\"ember-cli-addon-search/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/app.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/components/sort-order-arrow.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - components\');\n    test(\'components/sort-order-arrow.js should pass jshint\', function() { \n      ok(true, \'components/sort-order-arrow.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/components/sort-order-arrow.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/controllers/packages/list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/packages\');\n    test(\'controllers/packages/list.js should pass jshint\', function() { \n      ok(true, \'controllers/packages/list.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/controllers/packages/list.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/ember-cli-addon-search/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-addon-search/tests/helpers\');\n    test(\'ember-cli-addon-search/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'ember-cli-addon-search/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/ember-cli-addon-search/tests/helpers/resolver.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/ember-cli-addon-search/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-addon-search/tests/helpers\');\n    test(\'ember-cli-addon-search/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'ember-cli-addon-search/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/ember-cli-addon-search/tests/helpers/start-app.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/ember-cli-addon-search/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-addon-search/tests\');\n    test(\'ember-cli-addon-search/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'ember-cli-addon-search/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/ember-cli-addon-search/tests/test-helper.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/ember-cli-addon-search/tests/unit/helpers/digit-grouping-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-addon-search/tests/unit/helpers\');\n    test(\'ember-cli-addon-search/tests/unit/helpers/digit-grouping-test.js should pass jshint\', function() { \n      ok(true, \'ember-cli-addon-search/tests/unit/helpers/digit-grouping-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/ember-cli-addon-search/tests/unit/helpers/digit-grouping-test.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/ga.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'ga.js should pass jshint\', function() { \n      ok(true, \'ga.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/ga.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/helpers/digit-grouping.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/digit-grouping.js should pass jshint\', function() { \n      ok(true, \'helpers/digit-grouping.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/helpers/digit-grouping.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/helpers/resolver\", \n  [\"ember/resolver\",\"ember-cli-addon-search/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=ember-cli-addon-search/tests/helpers/resolver.js");

;eval("define(\"ember-cli-addon-search/tests/helpers/start-app\", \n  [\"ember\",\"ember-cli-addon-search/app\",\"ember-cli-addon-search/router\",\"ember-cli-addon-search/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=ember-cli-addon-search/tests/helpers/start-app.js");

;eval("define(\"ember-cli-addon-search/tests/initializers/store.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - initializers\');\n    test(\'initializers/store.js should pass jshint\', function() { \n      ok(true, \'initializers/store.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/initializers/store.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/models/github-repo.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/github-repo.js should pass jshint\', function() { \n      ok(true, \'models/github-repo.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/models/github-repo.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/models/github-user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/github-user.js should pass jshint\', function() { \n      ok(true, \'models/github-user.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/models/github-user.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/models/npm-user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/npm-user.js should pass jshint\', function() { \n      ok(true, \'models/npm-user.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/models/npm-user.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/models/package.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/package.js should pass jshint\', function() { \n      ok(true, \'models/package.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/models/package.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/router.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/routes/packages/list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/packages\');\n    test(\'routes/packages/list.js should pass jshint\', function() { \n      ok(true, \'routes/packages/list.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/routes/packages/list.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/store.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'store.js should pass jshint\', function() { \n      ok(true, \'store.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/store.jshint.js");

;eval("define(\"ember-cli-addon-search/tests/test-helper\", \n  [\"ember-cli-addon-search/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    if (QUnit.urlParams.nocontainer) {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'hidden\';\n    } else {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'visible\';\n    }\n  });//# sourceURL=ember-cli-addon-search/tests/test-helper.js");

;eval("define(\"ember-cli-addon-search/tests/unit/helpers/digit-grouping-test\", \n  [\"ember-cli-addon-search/helpers/digit-grouping\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var digitGrouping = __dependency1__.digitGrouping;\n\n    module(\'DigitGroupingHelper\');\n\n    test(\'it works\', function() {\n      var result = digitGrouping(\'123456789\');\n      equal(result, \'123,456,789\');\n    });\n  });//# sourceURL=ember-cli-addon-search/tests/unit/helpers/digit-grouping-test.js");

;eval("define(\"ember-cli-addon-search/tests/views/table-body.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - views\');\n    test(\'views/table-body.js should pass jshint\', function() { \n      ok(true, \'views/table-body.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-addon-search/tests/views/table-body.jshint.js");

;eval("define(\"ember-cli-addon-search/views/table-body\", \n  [\"ember-sortable-collection-view/views/sortable-collection\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var SortableCollectionView = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = SortableCollectionView.extend({\n      tagName:          \'tbody\',\n      itemTemplateName: \'packages/item\'\n    });\n  });//# sourceURL=ember-cli-addon-search/views/table-body.js");

/* jshint ignore:start */

define('ember-cli-addon-search/config/environment', ['ember'], function(Ember) {
  var metaName = 'ember-cli-addon-search/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
});

if (runningTests) {
  require('ember-cli-addon-search/tests/test-helper');
} else {
  require('ember-cli-addon-search/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
